#include "tab5_camera.h"
#include "esphome/core/log.h"
#include "esphome/core/hal.h"

#ifdef USE_ESP32
#include "esphome/components/esp32/gpio.h"
#endif

#include <driver/ledc.h>

namespace esphome {
namespace tab5_camera {

static const char *const TAG = "tab5_camera";

// -------------------- Tables de registres SC202CS --------------------

// 1080P (1920x1080)
static const uint16_t SC202CS_1080P_REGS[][2] = {
    {0x0103, 0x01}, {0x0100, 0x00}, {0x36e9, 0x80}, {0x37f9, 0x80},
    {0x3200, 0x00}, {0x3201, 0x00}, {0x3202, 0x00}, {0x3203, 0x00},
    {0x3204, 0x07}, {0x3205, 0x8f}, {0x3206, 0x04}, {0x3207, 0x47},
    {0x3208, 0x07}, {0x3209, 0x80}, {0x320a, 0x04}, {0x320b, 0x38},
    {0x320c, 0x04}, {0x320d, 0x4c}, {0x320e, 0x04}, {0x320f, 0x66},
    {0x3301, 0x06}, {0x3304, 0x50}, {0x3306, 0x48}, {0x3308, 0x18},
    {0x3309, 0x68}, {0x330b, 0xe8}, {0x330d, 0x28}, {0x330e, 0x48},
    {0x3314, 0x94}, {0x331e, 0x41}, {0x331f, 0x61}, {0x3333, 0x10},
    {0x3334, 0x40}, {0x335e, 0x06}, {0x335f, 0x0a}, {0x3364, 0x5e},
    {0x337c, 0x02}, {0x337d, 0x0a}, {0x3390, 0x01}, {0x3391, 0x03},
    {0x3392, 0x07}, {0x3393, 0x06}, {0x3394, 0x06}, {0x3395, 0x06},
    {0x3630, 0xf0}, {0x3633, 0x33}, {0x3634, 0x64}, {0x3637, 0x50},
    {0x4837, 0x1e}, {0x0100, 0x01},
};

// 720P (1280x720)
static const uint16_t SC202CS_720P_REGS[][2] = {
    {0x0103, 0x01}, {0x0100, 0x00}, {0x36e9, 0x80}, {0x37f9, 0x80},
    {0x3200, 0x00}, {0x3201, 0xa0}, {0x3202, 0x00}, {0x3203, 0xf0},
    {0x3204, 0x06}, {0x3205, 0xef}, {0x3206, 0x03}, {0x3207, 0x57},
    {0x3208, 0x05}, {0x3209, 0x00}, {0x320a, 0x02}, {0x320b, 0xd0},
    {0x320c, 0x04}, {0x320d, 0x4c}, {0x320e, 0x03}, {0x320f, 0x00},
    {0x3301, 0x06}, {0x3304, 0x50}, {0x3306, 0x48}, {0x3630, 0xf0},
    {0x3633, 0x33}, {0x3634, 0x64}, {0x4837, 0x1e}, {0x0100, 0x01},
};

// VGA (640x480)
static const uint16_t SC202CS_VGA_REGS[][2] = {
    {0x0103, 0x01}, {0x0100, 0x00}, {0x36e9, 0x80}, {0x37f9, 0x80},
    {0x3200, 0x01}, {0x3201, 0x48}, {0x3202, 0x01}, {0x3203, 0x38},
    {0x3204, 0x06}, {0x3205, 0x47}, {0x3206, 0x03}, {0x3207, 0x0f},
    {0x3208, 0x02}, {0x3209, 0x80}, {0x320a, 0x01}, {0x320b, 0xe0},
    {0x320c, 0x04}, {0x320d, 0x4c}, {0x320e, 0x02}, {0x320f, 0x08},
    {0x3301, 0x06}, {0x3304, 0x50}, {0x3630, 0xf0}, {0x4837, 0x1e},
    {0x0100, 0x01},
};

// QVGA (320x240)
static const uint16_t SC202CS_QVGA_REGS[][2] = {
    {0x0103, 0x01}, {0x0100, 0x00}, {0x36e9, 0x80}, {0x37f9, 0x80},
    {0x3200, 0x01}, {0x3201, 0x48}, {0x3202, 0x01}, {0x3203, 0x38},
    {0x3204, 0x06}, {0x3205, 0x47}, {0x3206, 0x03}, {0x3207, 0x0f},
    {0x3208, 0x01}, {0x3209, 0x40}, {0x320a, 0x00}, {0x320b, 0xf0},
    {0x320c, 0x04}, {0x320d, 0x4c}, {0x320e, 0x01}, {0x320f, 0x04},
    {0x3301, 0x06}, {0x3304, 0x50}, {0x3630, 0xf0}, {0x4837, 0x1e},
    {0x0100, 0x01},
};

// -------------------- Fonctions principales --------------------

void Tab5Camera::setup() {
  ESP_LOGCONFIG(TAG, "Configuration Tab5 Camera...");

  if (!this->start_external_clock_()) { this->mark_failed(); return; }
  if (this->reset_pin_ && !this->reset_sensor_()) { this->mark_failed(); return; }
  delay(50);
  if (!this->init_sc202cs_sensor_()) { this->mark_failed(); return; }
  if (!this->configure_sc202cs_()) { this->mark_failed(); return; }
  if (!this->allocate_frame_buffer_()) { this->mark_failed(); return; }
  if (!this->init_csi_interface_()) ESP_LOGW(TAG, "CSI non initialisé, capture pourra échouer");

  this->initialized_ = true;
  ESP_LOGI(TAG, "Caméra Tab5 initialisée avec succès");
}

void Tab5Camera::loop() {}
void Tab5Camera::dump_config() {
  ESP_LOGCONFIG(TAG, "Tab5 Camera:");
  ESP_LOGCONFIG(TAG, "  Nom: %s", this->name_.c_str());
  ESP_LOGCONFIG(TAG, "  Adresse I2C capteur: 0x%02X", this->sensor_address_);
  ESP_LOGCONFIG(TAG, "  Fréquence clock: %u Hz", this->xclk_frequency_);
  CameraResolutionInfo res_info = this->get_resolution_info_();
  ESP_LOGCONFIG(TAG, "  Résolution: %ux%u", res_info.width, res_info.height);
  const char *format_str = "Unknown";
  switch (this->pixel_format_) {
    case PIXEL_FORMAT_RGB565: format_str="RGB565"; break;
    case PIXEL_FORMAT_YUV422: format_str="YUV422"; break;
    case PIXEL_FORMAT_RAW8: format_str="RAW8"; break;
    case PIXEL_FORMAT_JPEG: format_str="JPEG"; break;
  }
  ESP_LOGCONFIG(TAG, "  Format pixel: %s", format_str);
  ESP_LOGCONFIG(TAG, "  Qualité JPEG: %u", this->jpeg_quality_);
  ESP_LOGCONFIG(TAG, "  Framerate: %u fps", this->framerate_);
  ESP_LOGCONFIG(TAG, "  État: %s", this->initialized_ ? "Initialisé" : "Non initialisé");
}

// -------------------- Fonctions CSI et I2C --------------------

// start_external_clock_, reset_sensor_, init_sc202cs_sensor_, configure_sc202cs_,
// write_sensor_reg_, read_sensor_reg_, write_sensor_regs_, get_resolution_info_,
// allocate_frame_buffer_, free_frame_buffer_, init_csi_interface_,
// capture_csi_frame_, capture_frame(), take_snapshot(), start_streaming(),
// stop_streaming(), get_frame_buffer(), return_frame_buffer()
// ... (mêmes que la version précédente, inchangées)

}  // namespace tab5_camera
}  // namespace esphome


